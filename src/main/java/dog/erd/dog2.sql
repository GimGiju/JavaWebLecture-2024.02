- - 이전의 데이터베이스가 존재한다면 삭제
DROP DATABASE IF EXISTS dog;
- - 새로운 데이터베이스 생성
CREATE DATABASE dog;
- - 사용할 데이터베이스 선택
USE dog;
- - user 테이블 생성 및 초기화
CREATE TABLE user (
uId VARCHAR(255) NOT NULL PRIMARY KEY,
pwd VARCHAR(255) NOT NULL,
uname VARCHAR(255) NOT NULL,
email VARCHAR(255),
regDate DATE DEFAULT CURRENT_DATE,
isDeleted INT DEFAULT 0,
balance INT DEFAULT 0
);
- - board 테이블 생성 및 초기화
CREATE TABLE board (
boardId INT NOT NULL AUTO_INCREMENT,
title VARCHAR(255),
content VARCHAR(4000),
modTime DATETIME DEFAULT CURRENT_TIMESTAMP,
isDeleted INT,
viewCount INT,
replyCount INT,
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (boardId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);
- - dog 테이블 생성 및 초기화
CREATE TABLE dog (
dogId INT NOT NULL AUTO_INCREMENT,
bDate DATE,
breed VARCHAR(255) NOT NULL,
gender VARCHAR(255),
dname VARCHAR(255),
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (dogId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);
- - gallery 테이블 생성 및 초기화
CREATE TABLE gallery (
galleryId INT NOT NULL AUTO_INCREMENT,
title VARCHAR(255) NOT NULL,
content VARCHAR(4000),
isDeleted INT DEFAULT 0,
viewCount INT DEFAULT 0,
replyCount INT DEFAULT 0,
fName VARCHAR(255) DEFAULT '',
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (galleryId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);
- - item 테이블 생성 및 초기화
CREATE TABLE item (
itemId INT NOT NULL AUTO_INCREMENT,
price INT NOT NULL,
itemName VARCHAR(255) NOT NULL,
iType VARCHAR(255) DEFAULT 'etc' NOT NULL,
note VARCHAR(2000),
fName VARCHAR(255),
PRIMARY KEY (itemId)
);
- - liked 테이블 생성 및 초기화
CREATE TABLE liked (
likedId INT NOT NULL AUTO_INCREMENT,
galleryId INT NOT NULL,
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (likedId),
FOREIGN KEY (galleryId) REFERENCES gallery(galleryId) ON UPDATE RESTRICT ON DELETE RESTRICT,
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);
- - reply 테이블 생성 및 초기화
CREATE TABLE reply (
replyId INT NOT NULL AUTO_INCREMENT,
comment VARCHAR(2000) NOT NULL,
regTime DATETIME DEFAULT CURRENT_TIMESTAMP,
userId VARCHAR(255) NOT NULL,
boardId INT NOT NULL,
PRIMARY KEY (replyId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT,
FOREIGN KEY (boardId) REFERENCES board(boardId) ON UPDATE RESTRICT ON DELETE RESTRICT
);
- - gallery 테이블의 fName 컬럼의 디폴트 값 설정
ALTER TABLE gallery MODIFY COLUMN fName VARCHAR(255) DEFAULT '';








USE dog;

DROP DATABASE IF EXISTS dog;

CREATE DATABASE dog;

USE dog;

CREATE TABLE user (
uId VARCHAR(255) NOT NULL PRIMARY KEY,
pwd VARCHAR(255) NOT NULL,
uname VARCHAR(255) NOT NULL,
email VARCHAR(255),
regDate DATE DEFAULT (CURRENT_DATE),
isDeleted INT DEFAULT 0,
balance INT DEFAULT 0
);

CREATE TABLE board (
boardId INT NOT NULL AUTO_INCREMENT,
title VARCHAR(255),
content VARCHAR(4000),
modTime DATETIME DEFAULT CURRENT_TIMESTAMP,
isDeleted INT,
viewCount INT,
replyCount INT,
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (boardId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);

CREATE TABLE dog (
dogId INT NOT NULL AUTO_INCREMENT,
bDate DATE,
breed VARCHAR(255) NOT NULL,
gender VARCHAR(255),
dname VARCHAR(255),
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (dogId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);

CREATE TABLE gallery (
galleryId INT NOT NULL AUTO_INCREMENT,
title VARCHAR(255) NOT NULL,
content VARCHAR(4000),
isDeleted INT DEFAULT 0,
viewCount INT DEFAULT 0,
replyCount INT DEFAULT 0,
fName VARCHAR(255) DEFAULT '',
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (galleryId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);

CREATE TABLE item (
itemId INT NOT NULL AUTO_INCREMENT,
price INT NOT NULL,
itemName VARCHAR(255) NOT NULL,
iType VARCHAR(255) DEFAULT 'etc' NOT NULL,
note VARCHAR(2000),
fName VARCHAR(255),
PRIMARY KEY (itemId)
);

CREATE TABLE liked (
likedId INT NOT NULL AUTO_INCREMENT,
galleryId INT NOT NULL,
userId VARCHAR(255) NOT NULL,
PRIMARY KEY (likedId),
FOREIGN KEY (galleryId) REFERENCES gallery(galleryId) ON UPDATE RESTRICT ON DELETE RESTRICT,
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT
);

CREATE TABLE reply (
replyId INT NOT NULL AUTO_INCREMENT,
comment VARCHAR(2000) NOT NULL,
regTime DATETIME DEFAULT CURRENT_TIMESTAMP,
userId VARCHAR(255) NOT NULL,
boardId INT NOT NULL,
PRIMARY KEY (replyId),
FOREIGN KEY (userId) REFERENCES user(uId) ON UPDATE RESTRICT ON DELETE RESTRICT,
FOREIGN KEY (boardId) REFERENCES board(boardId) ON UPDATE RESTRICT ON DELETE RESTRICT
);

ALTER TABLE gallery MODIFY COLUMN fName VARCHAR(255) DEFAULT '';
